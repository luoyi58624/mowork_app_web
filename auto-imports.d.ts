/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const ServerEnv: typeof import('./src/config/global')['ServerEnv']
  const StorageKey: typeof import('./src/config/global')['StorageKey']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const addZero: typeof import('./src/utils/commons')['addZero']
  const checkCh: typeof import('./src/utils/commons')['checkCh']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const flutter: typeof import('./src/utils/flutter')['flutter']
  const formRules: typeof import('./src/utils/form')['formRules']
  const formatDate: typeof import('./src/utils/commons')['formatDate']
  const generateLetterArray: typeof import('./src/utils/commons')['generateLetterArray']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getChineseHeadLetter: typeof import('./src/utils/commons')['getChineseHeadLetter']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getDomId: typeof import('./src/utils/commons')['getDomId']
  const getFileSuffix: typeof import('./src/utils/commons')['getFileSuffix']
  const globalConfig: typeof import('./src/config/global')['globalConfig']
  const h: typeof import('vue')['h']
  const http: typeof import('./src/http/http')['http']
  const inject: typeof import('vue')['inject']
  const isEmpty: typeof import('./src/utils/commons')['isEmpty']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const renderSize: typeof import('./src/utils/commons')['renderSize']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const simpleDateTime: typeof import('./src/utils/commons')['simpleDateTime']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const strChineseFirstPY: typeof import('./src/utils/chineseFirstPY')['strChineseFirstPY']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useListData: typeof import('./src/composables/table')['useListData']
  const useSlots: typeof import('vue')['useSlots']
  const useTable: typeof import('./src/composables/table')['useTable']
  const verifyPhone: typeof import('./src/utils/commons')['verifyPhone']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode } from 'vue'
}
